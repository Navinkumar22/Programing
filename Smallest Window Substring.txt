Smallest Window Substring
The program must accept two string values S1 and 52 as input. 
The program must print the smallest substring in the string S1 which contains all the alphabets in the string S2. 
If there is no such substring in the string S1 then the program must print -1.

Note: If more than one smallest substring has the same length then consider the first substring.

Boundary Condition(s): 
1 <= Length of S1 <= 1000 
1 <= Length of S2 <= Length of S1

Input Format: 
The first line contains the two string values S1 and 52 separated by a space.
Output Format: 
The first line contains the smallest substring of S1 or -1.

Example Input/Output 1: 

Input: abodecodebanc abc
Output: banc

Program:

a=input().split() 
b=a[0] 
c=a[1] 
result=[] 
if len(c)>len(b) or c=='':
	print(-1)
	exit() 
for i in range(len(b)): 
	for j in range(i, len(b));
		t=b[i:j+1] 
		f=0 
		for k in c:
			if c.count(k)>t.count(k):
				f=1
				break 
		if f==0 and t!="":
			result.append(t) 

if len(result)==0:
	print(-1) 

out=result[0] 
for i in result: 
	if len(i)<len(out):
		out=i 
print(out)